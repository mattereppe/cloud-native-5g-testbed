---
apiVersion: v1
kind: Namespace
metadata:
  name: open5gs
  labels:
    name: open5gs
---
apiVersion: v1
kind: Secret
metadata:
  name: k8s-secret-open5gs
  namespace: open5gs
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7InVzZXJuYW1lIjoibWF0dGVyZXBwZSIsInBhc3N3b3JkIjoiZ2hwX2dzNjZLVjRqaGtSc3lzdFE0S21Xa2lVWHk2b1dRNzJ2blRPWCIsImVtYWlsIjoibWF0dGVyZXBwZUBnbWFpbC5jb20iLCJhdXRoIjoiYldGMGRHVnlaWEJ3WlRwbmFIQmZaM00yTmt0V05HcG9hMUp6ZVhOMFVUUkxiVmRyYVZWWWVUWnZWMUUzTW5adVZFOVkifX19
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-mongodb-config
  namespace: open5gs
  labels:
    epc-role: mongodb
data:
  mongod.conf: |

    storage:
      dbPath: /srv/
      journal:
        enabled: true
    
    systemLog:
      logAppend: true
    
    net:
      port: 27017
      bindIp: 0.0.0.0
    
    
    processManagement:
      timeZoneInfo: /usr/share/zoneinfo







---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-amf-config
  namespace: open5gs
  labels:
    epc-role: amf
data:
  amf.yaml: |
    logger:
        file: /var/log/open5gs/amf.log
    amf:
        sbi:
          - addr: $AMF_POD_IP
            port: 7777
        ngap:
          - addr: $AMF_POD_IP
        guami:
          - plmn_id:
              mcc: 001
              mnc: 01
            amf_id:
              region: 2
              set: 1
        tai:
          - plmn_id:
              mcc: 001
              mnc: 01
            tac: 1
        plmn_support:
          - plmn_id:
              mcc: 001
              mnc: 01
            s_nssai:
              - sst: 1
        security:
            integrity_order : [ NIA2, NIA1, NIA0 ]
            ciphering_order : [ NEA0, NEA1, NEA2 ]
        network_name:
            full: Open5GS
        amf_name: open5gs-amf0
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-ausf-config
  namespace: open5gs
  labels:
    epc-role: ausf
data:
  ausf.yaml: |
    logger:
        file: /var/log/open5gs/ausf.log
    ausf:
        sbi:
          - addr: $AUSF_POD_IP
            port: 7777
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-bsf-config
  namespace: open5gs
  labels:
    epc-role: bsf
data:
  bsf.yaml: |
    logger:
        file: /var/log/open5gs/bsf.log

    db_uri: mongodb://mongodb.open5gs.svc.k8s.tnt-lab.local/open5gs
    
    bsf:
        sbi:
          - addr: $BSF_POD_IP
            port: 7777
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-nrf-config
  namespace: open5gs
  labels:
    epc-role: nrf
data:
  nrf.yaml: |
    logger:
        file: /var/log/open5gs/nrf.log

    db_uri: mongodb://mongodb.open5gs.svc.k8s.tnt-lab.local/open5gs
    
    nrf:
        sbi:
          addr:
            - $NRF_POD_IP
          port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-nssf-config
  namespace: open5gs
  labels:
    epc-role: nssf
data:
  nssf.yaml: |
    logger:
        file: /var/log/open5gs/nssf.log
    nssf:
        sbi:
          - addr: $NSSF_POD_IP
            port: 7777
        nsi:
          - addr: nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
            s_nssai:
              sst: 1

    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-pcf-config
  namespace: open5gs
  labels:
    epc-role: pcf
data:
  pcf.yaml: |
    logger:
        file: /var/log/open5gs/pcf.log

    db_uri: mongodb://mongodb.open5gs.svc.k8s.tnt-lab.local/open5gs
    
    pcf:
        sbi:
          - addr: $PCF_POD_IP
            port: 7777
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-scp-config
  namespace: open5gs
  labels:
    epc-role: scp
data:
  scp.yaml: |
    logger:
        file: /var/log/open5gs/scp.log

    db_uri: mongodb://mongodb.open5gs.svc.k8s.tnt-lab.local/open5gs
    
    scp:
        sbi:
          - addr: $SCP_POD_IP
            port: 7777
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-smf-config
  namespace: open5gs
  labels:
    epc-role: smf
data:
  smf.yaml: |
    logger:
        file: /var/log/open5gs/smf.log

    smf:
        sbi:
          - addr: $SMF_POD_IP
            port: 7777
        pfcp:
          - addr: $SMF_POD_IP
        gtpc:
          - addr: $SMF_POD_IP
        gtpu:
          - addr: $SMF_POD_IP 
        subnet:
          - addr: 10.45.0.1/16
        dns:
          - 8.8.8.8
          - 8.8.4.4
        mtu: 1400
        freeDiameter: /etc/freeDiameter/smf.conf
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
    
    upf:
        pfcp:
          - name: upf.open5gs.svc.k8s.tnt-lab.local
            apn: internet
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: freediameter-smf-config
  namespace: open5gs
  labels:
    epc-mode: smf
data:
 smf.conf: |
  Identity = "smf.localdomain";
  Realm = "tnt-lab.local";
  TLS_Cred = "/etc/freeDiameter/smf.cert.pem", "/etc/freeDiameter/smf.key.pem";
  TLS_CA = "/etc/freeDiameter/cacert.pem";

  LoadExtension = "/usr/src/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";
  LoadExtension = "/usr/src/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_rfc5777.fdx";
  LoadExtension = "/usr/src/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_mip6i.fdx";
  LoadExtension = "/usr/src/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nasreq.fdx";
  LoadExtension = "/usr/src/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nas_mipv6.fdx";
  LoadExtension = "/usr/src/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca.fdx";
  LoadExtension = "/usr/src/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca_3gpp.fdx";

# There is no pcrf running in my deployment!
# ConnectPeer = "pcrf.localdomain" { ConnectTo = "pcrf.open5gs.svc.k8s.tnt-lab.local"; No_TLS; No_SCTP; };
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-udm-config
  namespace: open5gs
  labels:
    epc-role: udm
data:
  udm.yaml: |
    logger:
        file: /var/log/open5gs/udm.log

    udm:
        sbi:
          - addr: $UDM_POD_IP
            port: 7777
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-udr-config
  namespace: open5gs
  labels:
    epc-role: udr
data:
  udr.yaml: |
    logger:
        file: /var/log/open5gs/udr.log

    db_uri: mongodb://mongodb.open5gs.svc.k8s.tnt-lab.local/open5gs
    
    logger:
        file: /var/log/open5gs/udr.log
    udr:
        sbi:
          - addr: $UDR_POD_IP
            port: 7777
    
    nrf:
        sbi:
          - addr:
              - nrf.open5gs.svc.k8s.tnt-lab.local
            port: 7777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-upf-config
  namespace: open5gs
  labels:
    epc-role: upf
data:
  upf.yaml: |
    logger:
        file: /var/log/open5gs/upf.log

    upf:
        pfcp:
          - addr: $UPF_POD_IP
        gtpu:
          - addr: $UPF_POD_IP
        subnet:
          - addr: 10.45.0.1/16
          - addr: 2001:230:cafe::1/48
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-webui-config
  namespace: open5gs
  labels:
    role: webui
data:
  DB_URI: mongodb://mongodb.open5gs.svc.k8s.tnt-lab.local/open5gs
  HOSTNAME: "0.0.0.0"
  PORT: "3000"
  NODE_ENV: production
  SECRET_KEY: "change-me"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ueransim-gnb-config
  namespace: open5gs
  labels:
    ran-role: gnb
data:
  gnb.yaml: |
    mcc: 001
    mnc: 01
    
    nci: 0x000000010
    idLength: 32
    tac: 1
    
    linkIp: $GNB_POD_IP
    ngapIp: $GNB_POD_IP
    gtpIp: $GNB_POD_IP
    
    amfConfigs:
      - address: amf.open5gs.svc.k8s.tnt-lab.local
        port: 38412
    
    slices:
      - sst: 1
    
    ignoreStreamIds: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ueransim-ue-config
  namespace: open5gs
  labels:
    ran-role: ue
data:
  ue.yaml: |
    supi: 'imsi-001010000000001'
    mcc: '001'
    mnc: '01'
    
    key: '465B5CE8B199B49FAA5F0A2EE238A6BC'
    op: 'E8ED289DEBA952E4283B54E88E6183CA'
    opType: 'OPC'
    amf: '8000'
    imei: '356938035643803'
    imeiSv: '4370816125816151'
    
    gnbSearchList:
      - gnb.open5gs.svc.k8s.tnt-lab.local
    
    sessions:
      - type: 'IPv4'
        apn: 'internet'
        slice:
          sst: 1
        emergency: false
 
    configured-nssai:
      - sst: 1

    default-nssai:
      - sst: 1
    
    uacAic:
      mps: false
      mcs: false
    
    uacAcc:
      normalClass: 0
      class11: false
      class12: false
      class13: false
      class14: false
      class15: false
        
    integrity:
      IA1: true
      IA2: true
      IA3: true
    
    ciphering:
      EA1: true
      EA2: true
      EA3: true
    
    integrityMaxRate:
      uplink: 'full'
      downlink: 'full'
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: static-pv-mongodb
  namespace: open5gs
spec:
  storageClassName: static-pv
  capacity:
    storage: 100Mi
  accessModes: 
    - ReadWriteMany
  nfs:
    path: /srv/mongodb
    server: 172.21.100.31
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: open5gs
spec:
  ports:
  - name: mongodb 
    port: 27017
    protocol: TCP    
    targetPort: 27017
  clusterIP: None # Load balancing should not be used for a datastore
  selector:
    epc-role: mongodb    
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static-pv-mongodb
  namespace: open5gs
spec:
  storageClassName: static-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: mongodb
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
#terminationGracePeriodSeconds: 10
  replicas: 1
  serviceName: "mongodb-svc"
  selector:
    matchLabels:
      epc-role: mongodb
  template:
    metadata:
      labels:
        epc-role: mongodb
    spec:
      volumes:
        - name: pv-mongodb
          persistentVolumeClaim:
            claimName: static-pv-mongodb
        - name: mongodb-configmap-volume
          configMap:
            name: open5gs-mongodb-config
      containers:
        - name: mongodb
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: 
            - mongod
            - "--config"
            - "/etc/mongod.conf"
#            - "--replSet"
#            - rs0
#            - "--smallfiles"
#            - "--noprealloc"
          volumeMounts:
          - name: pv-mongodb
            mountPath: /srv
          - name: mongodb-configmap-volume
            mountPath: /etc/mongod.conf
            subPath: mongod.conf
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs

---
apiVersion: v1
kind: Service
metadata:
  name: amf
  namespace: open5gs
  labels:
    epc-role: amf
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  - name: ngap		 # Next-Generation Application Protocol (between gNodeB - AMF)
    port: 38412
    protocol: SCTP
#   nodePort: 36412
  selector:
    epc-role: amf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: amf
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "amf"
  selector:
    matchLabels:
      epc-role: amf
  template:
    metadata:
      labels:
        epc-role: amf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/amf.yaml | envsubst > /etc/open5gs/amf.yaml"]
          volumeMounts:
            - name: amf-configmap-volume
              mountPath: /tmp/
            - name: amf-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: AMF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: amf
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-amfd", "-c", "/etc/open5gs/amf.yaml"]
#  command: ["/bin/bash","-c","sleep 3600"]
          volumeMounts:
          - name: amf-data-volume
            mountPath: /etc/open5gs/
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: amf-configmap-volume
          configMap:
            name: open5gs-amf-config
        - name: amf-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: ausf
  namespace: open5gs
  labels:
    epc-role: ausf
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: ausf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: ausf
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "ausf"
  selector:
    matchLabels:
      epc-role: ausf
  template:
    metadata:
      labels:
        epc-role: ausf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/ausf.yaml | envsubst > /etc/open5gs/ausf.yaml"]
          volumeMounts:
            - name: ausf-configmap-volume
              mountPath: /tmp
            - name: ausf-data-volume
              mountPath: /etc/open5gs/
          env: 
            - name: AUSF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: ausf
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-ausfd", "-c", "/etc/open5gs/ausf.yaml"]
          volumeMounts:
          - name: ausf-data-volume
            mountPath: /etc/open5gs/
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: ausf-configmap-volume
          configMap:
            name: open5gs-ausf-config
        - name: ausf-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: bsf
  namespace: open5gs
  labels:
    epc-role: bsf
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: bsf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: bsf
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "bsf-svc"
  selector:
    matchLabels:
      epc-role: bsf
  template:
    metadata:
      labels:
        epc-role: bsf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/bsf.yaml | envsubst > /etc/open5gs/bsf.yaml"]
          volumeMounts:
            - name: bsf-configmap-volume
              mountPath: /tmp/
            - name: bsf-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: BSF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: bsf
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-bsfd", "-c", "/etc/open5gs/bsf.yaml"]
          volumeMounts:
          - name: bsf-data-volume
            mountPath: /etc/open5gs
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: bsf-configmap-volume
          configMap:
            name: open5gs-bsf-config
        - name: bsf-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: nrf
  namespace: open5gs
  labels:
    epc-role: nrf
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: nrf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: nrf
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "nrf"
  selector:
    matchLabels:
      epc-role: nrf
  template:
    metadata:
      labels:
        epc-role: nrf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/nrf.yaml | envsubst > /etc/open5gs/nrf.yaml"]
          volumeMounts:
            - name: nrf-configmap-volume
              mountPath: /tmp/
            - name: nrf-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: NRF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: nrf
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          volumeMounts:
            - name: nrf-data-volume
              mountPath: /etc/open5gs/
          command: ["open5gs-nrfd", "-c", "/etc/open5gs/nrf.yaml"]
# command: ["/bin/bash","-c","sleep 3600"]
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: nrf-configmap-volume
          configMap:
            name: open5gs-nrf-config
        - name: nrf-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: nssf
  namespace: open5gs
  labels:
    epc-role: nssf
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: nssf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: nssf
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "nssf-svc"
  selector:
    matchLabels:
      epc-role: nssf
  template:
    metadata:
      labels:
        epc-role: nssf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/nssf.yaml | envsubst > /etc/open5gs/nssf.yaml"]
          volumeMounts:
            - name: nssf-configmap-volume
              mountPath: /tmp/
            - name: nssf-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: NSSF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: nssf
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-nssfd", "-c", "/etc/open5gs/nssf.yaml"]
          volumeMounts:
          - name: nssf-data-volume
            mountPath: /etc/open5gs
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: nssf-configmap-volume
          configMap:
            name: open5gs-nssf-config
        - name: nssf-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: pcf
  namespace: open5gs
  labels:
    epc-role: pcf
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: pcf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: pcf
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "pcf-svc"
  selector:
    matchLabels:
      epc-role: pcf
  template:
    metadata:
      labels:
        epc-role: pcf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/pcf.yaml | envsubst > /etc/open5gs/pcf.yaml"]
          volumeMounts:
            - name: pcf-configmap-volume
              mountPath: /tmp
            - name: pcf-data-volume
              mountPath: /etc/open5gs
          env:
            - name: PCF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP 
      containers:
        - name: pcf
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-pcfd", "-c", "/etc/open5gs/pcf.yaml"]
          volumeMounts:
          - name: pcf-data-volume
            mountPath: /etc/open5gs/
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: pcf-configmap-volume
          configMap:
            name: open5gs-pcf-config
        - name: pcf-data-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: scp
  namespace: open5gs
  labels:
    epc-role: scp
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: scp
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: scp
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "scp"
  selector:
    matchLabels:
      epc-role: scp
  template:
    metadata:
      labels:
        epc-role: scp
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/scp.yaml | envsubst > /etc/open5gs/scp.yaml"]
          volumeMounts:
            - name: scp-configmap-volume
              mountPath: /tmp/
            - name: scp-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: SCP_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: scp
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-scpd", "-c", "/etc/open5gs/scp.yaml"]
          volumeMounts:
          - name: scp-data-volume
            mountPath: /etc/open5gs
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: scp-configmap-volume
          configMap:
            name: open5gs-scp-config
        - name: scp-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: smf
  namespace: open5gs
  labels:
    epc-role: smf
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
# gtpc, pfcp?
  - name: pfcp
    port: 8805
    protocol: UDP
  - name: gtpu
    port: 2152
    protocol: UDP
  - name: gtpc
    port: 2123
    protocol: UDP
  selector:
    epc-role: smf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: smf
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "smf"
  selector:
    matchLabels:
      epc-role: smf
  template:
    metadata:
      labels:
        epc-role: smf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/smf.yaml | envsubst > /etc/open5gs/smf.yaml"]
          volumeMounts:
            - name: smf-configmap-volume
              mountPath: /tmp/
            - name: smf-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: SMF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: smf
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-smfd", "-c", "/etc/open5gs/smf.yaml"]
          volumeMounts:
          - name: smf-data-volume
            mountPath: /etc/open5gs
#          - name: smf-fd-configmap-volume
#            mountPath: /etc/freeDiameter/smf.conf
#            subPath: smf.conf
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: smf-configmap-volume
          configMap:
            name: open5gs-smf-config
        - name: smf-data-volume
          emptyDir: {}
#        - name: smf-fd-configmap-volume
#          configMap:
#            name: freediameter-smf-config
---
apiVersion: v1
kind: Service
metadata:
  name: udm
  namespace: open5gs
  labels:
    epc-role: udm
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: udm    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: udm
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "udm"
  selector:
    matchLabels:
      epc-role: udm
  template:
    metadata:
      labels:
        epc-role: udm
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/udm.yaml | envsubst > /etc/open5gs/udm.yaml"]
          volumeMounts:
            - name: udm-configmap-volume
              mountPath: /tmp/
            - name: udm-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: UDM_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: udm
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-udmd", "-c", "/etc/open5gs/udm.yaml"]
          volumeMounts:
          - name: udm-data-volume
            mountPath: /etc/open5gs
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: udm-configmap-volume
          configMap:
            name: open5gs-udm-config
        - name: udm-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: udr
  namespace: open5gs
  labels:
    epc-role: udr
spec:
  ports:
  - name: sbi      # Service Based Interface (web interface "bus" in the control plane)
    port: 7777
    protocol: TCP    
  selector:
    epc-role: udr    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: udr
  namespace: open5gs
  labels:
    segment: core
    plane: control
spec:
  replicas: 1
  serviceName: "udr"
  selector:
    matchLabels:
      epc-role: udr
  template:
    metadata:
      labels:
        epc-role: udr
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/udr.yaml | envsubst > /etc/open5gs/udr.yaml"]
          volumeMounts:
            - name: udr-configmap-volume
              mountPath: /tmp/
            - name: udr-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: UDR_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: udr
          image: ghcr.io/mattereppe/open5gs:main
          imagePullPolicy: Always
          command: ["open5gs-udrd", "-c", "/etc/open5gs/udr.yaml"]
          volumeMounts:
          - name: udr-data-volume
            mountPath: /etc/open5gs
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: udr-configmap-volume
          configMap:
            name: open5gs-udr-config
        - name: udr-data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: upf
  namespace: open5gs
  labels:
    epc-role: upf
spec:
  ports:
  - name: pfcp      # Packet Forwarding Control Protocol (SDN-like packet forwarding rules)
    port: 8805
    protocol: UDP    
  - name: gtpu		# GPRS Tunnelling Protocol - User data tunneling
    port: 2152
    protocol: UDP
  selector:
    epc-role: upf    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: upf
  namespace: open5gs
  labels:
    segment: core
    plane: user
spec:
  replicas: 1
  serviceName: "upf-svc"
  selector:
    matchLabels:
      epc-role: upf
  template:
    metadata:
      labels:
        epc-role: upf
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/upf.yaml | envsubst > /etc/open5gs/upf.yaml"]
          volumeMounts:
            - name: upf-configmap-volume
              mountPath: /tmp/
            - name: upf-data-volume
              mountPath: /etc/open5gs/
          env:
            - name: UPF_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: upf
          image: ghcr.io/mattereppe/open5gs:main
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          imagePullPolicy: Always
#          command: ["open5gs-upfd", "-c", "/etc/open5gs/upf.yaml"]
          command: ["/bin/sh", "-c"]
# TODO: Enable forwarding and natting
          args:
            - ip tuntap add name ogstun mode tun;
              ip addr add 10.45.0.1/16 dev ogstun;
              ip link set ogstun up; 
              open5gs-upfd -c /etc/open5gs/upf.yaml				  
          volumeMounts:
          - name: upf-data-volume
            mountPath: /etc/open5gs
          - name: dev-net-tun
            mountPath: /dev/net/tun
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: upf-configmap-volume
          configMap:
            name: open5gs-upf-config
        - name: upf-data-volume
          emptyDir: {}
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun

---
apiVersion: v1
kind: Service
metadata:
  name: webui
  namespace: open5gs
  labels:
    role: webui
spec:
  type: NodePort
  ports:
  - name: mgmt      # Management port
    port: 80
    targetPort: 3000
    nodePort: 30080
    protocol: TCP    
  selector:
    role: webui    
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: webui
  namespace: open5gs
  labels:
    segment: core
    plane: mgmt
spec:
  replicas: 1
  selector:
    matchLabels:
      role: webui
  template:
    metadata:
      labels:
        role: webui
    spec:
      containers:
        - name: webui
          image: ghcr.io/mattereppe/webui:main
          imagePullPolicy: Always
          command: ["npm","run","start"]
          envFrom:
            - configMapRef:
                name: open5gs-webui-config 
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs

---
apiVersion: v1
kind: Service
metadata:
  name: gnb
  namespace: open5gs
  labels:
    ran-role: gnodeb
spec:
  ports:
  - name: rls      # Radio Link Simulator (UERANSIM-specific)
    port: 4997
    protocol: UDP    
  selector:
    ran-role: gnodeb    
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: gnb
  namespace: open5gs
  labels:
    segment: ran
spec:
  replicas: 1
  serviceName: "gnb-svc"
  selector:
    matchLabels:
      ran-role: gnodeb
  template:
    metadata:
      labels:
        ran-role: gnodeb
    spec:
      initContainers:
        - name: replace-env-variables
          image: bhgedigital/envsubst
          command: ["/bin/sh","-c","cat /tmp/gnb.yaml | envsubst > /etc/ueransim/gnb.yaml"]
          volumeMounts:
          - name: gnb-configmap-volume
            mountPath: /tmp/
# Alternatively: mount a specific file:
#            mountPath: /gnb.yaml
#            subPath: gnb.yaml
          - name: gnb-data-volume
            mountPath: /etc/ueransim
          env:
            - name: GNB_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - name: gnb
          image: ghcr.io/mattereppe/ueransim:main
          imagePullPolicy: Always
          command: ["nr-gnb", "-c", "/etc/ueransim/gnb.yaml"]
# command: ["/bin/bash","-c","sleep 3660"]
          volumeMounts:
          - name: gnb-data-volume
            mountPath: /etc/ueransim
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: gnb-configmap-volume
          configMap:
            name: ueransim-gnb-config
        - name: gnb-data-volume
          emptyDir: {}

---
# Service is not necessary, until there is no way to attach an external pod with a traffic generator
#apiVersion: v1
#kind: Service
#metadata:
#  name: gnb
#  namespace: open5gs
#  labels:
#    ran-role: gnodeb
#spec:
#  ports:
#  - name: rls      # Radio Link Simulator (UERANSIM-specific)
#    port: 4997
#    protocol: UDP    
#  selector:
#    ran-role: gnodeb    
#---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: ue
  namespace: open5gs
  labels:
    segment: ran
spec:
  replicas: 1
  selector:
    matchLabels:
      ran-role: ue
  template:
    metadata:
      labels:
        ran-role: ue
    spec:
      containers:
        - name: ue
          image: ghcr.io/mattereppe/ueransim:main
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          imagePullPolicy: Always
          command: ["nr-ue", "-c", "/etc/ueransim/ue.yaml"]
          volumeMounts:
          - name: ue-configmap-volume
            mountPath: /etc/ueransim/
          - name: dev-net-tun
            mountPath: /dev/net/tun
      imagePullSecrets: 						  # This to be removed once the image is public
        - name: k8s-secret-open5gs
      volumes:
        - name: ue-configmap-volume
          configMap:
            name: ueransim-ue-config
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun

---
